{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/board/board.component.css","webpack:///./src/app/board/board.component.html","webpack:///./src/app/board/board.component.ts","webpack:///./src/app/bot.ts","webpack:///./src/app/card.ts","webpack:///./src/app/deck-view/deck-view.component.css","webpack:///./src/app/deck-view/deck-view.component.html","webpack:///./src/app/deck-view/deck-view.component.ts","webpack:///./src/app/game.service.ts","webpack:///./src/app/game.ts","webpack:///./src/app/hand/hand.component.css","webpack:///./src/app/hand/hand.component.html","webpack:///./src/app/hand/hand.component.ts","webpack:///./src/app/mock_game.ts","webpack:///./src/app/move.ts","webpack:///./src/app/player.ts","webpack:///./src/app/scrap-view/scrap-view.component.css","webpack:///./src/app/scrap-view/scrap-view.component.html","webpack:///./src/app/scrap-view/scrap-view.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\"","module.exports = \"<app-board></app-board>\\n\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'Cuttle Bot';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppComponent } from './app.component';\nimport { BoardComponent } from './board/board.component';\nimport { HandComponent } from './hand/hand.component';\nimport { ScrapViewComponent } from './scrap-view/scrap-view.component';\nimport { DeckViewComponent } from './deck-view/deck-view.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    BoardComponent,\n    HandComponent,\n    ScrapViewComponent,\n    DeckViewComponent\n  ],\n  imports: [\n    BrowserModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \".flex-all {\\n\\tdisplay: flex;\\n\\tflex-direction: row;\\n  justify-content: center;\\n  margin: 0 auto;\\n}\\n\\n.flex-container {\\n\\tdisplay: flex;\\n\\tflex-direction: column;\\n\\talign-items: center;\\n  width: 100%;\\n  margin-right: 5%;\\n}\\n\\n#side {\\n\\tdisplay: flex;\\n\\tflex-direction: column;\\n\\talign-items: center;\\n  margin: 220px 2%;\\n  width:15%;\\n  min-width: 125px;\\n}\\n\\n#undo {\\n\\tdisplay: inline-block;\\n\\theight: 8%;\\n  max-height: 64px;\\n}\\n\\n#botHand, #yourHand {\\n\\tdisplay: flex;\\n\\tjustify-content: center;\\n\\twidth: 80%;\\n}\\n\\n#indicator {\\n\\tfont-family: Arial, Helvetica, sans-serif;\\n\\tfont-size: 2em;\\n}\\n\\n#deck {\\n\\theight: 160px;\\n}\\n\\n#scrap {\\n\\theight: 160px;\\n\\tmargin-top: 10%;\\n}\\n\\n#field {\\n\\tposition: relative;\\n\\tjustify-content: center;\\n\\tborder: 2px solid black;\\n\\twidth: 100%;\\n\\tmin-height: 360px;\\n\\tmax-height: 600px;\\n}\\n\\n.field {\\n\\tposition: relative;\\n}\\n\\n.fieldArea {\\n\\tdisplay: inline-block;\\n\\tposition: relative;\\n\\tmin-height: 180px;\\n\\n}\\n\\n#yourField {\\n  min-height: 180px;\\n  height: 180px;\\n  display: flex;\\n  flex-direction: row;\\n}\\n\\n#botField {\\n\\tmin-height: 180px;\\n\\tdisplay: flex;\\n\\tflex-direction: row;\\n}\\n\\n.yourPointCard {\\n\\tdisplay: inline-block;\\n  margin-right: 16px;\\n}\\n\\n.pointCardImg {\\n\\tdisplay: inline-block;\\n\\theight: 160px;\\n}\\n\\n.jack {\\n\\theight: 160px;\\n\\tposition: relative;\\n\\tmargin-left: -56px;\\n\\tmargin-right: 8px;\\n  box-shadow: 0px 2px 4px rgba(0, 0, 0, 0.1), 0px 4px 8px rgba(0, 0, 0, 0.06);\\n}\\n\\n.legalMove {\\n\\tbackground-color: rgb(91, 194, 69);\\n}\\n\\n.validTarget {\\n\\tborder: 3px solid rgb(91, 194, 69);\\n}\\n\\n/*Scrap view overlaying field*/\\n\\napp-scrap-view {\\n\\tposition: absolute;\\n\\tdisplay: block;\\n\\theight: 100%;\\n\\twidth: 100%;\\n\\tbackground-color: #FFF;\\n\\tz-index: 3;\\n}\\n\\napp-deck-view {\\n\\tposition: absolute;\\n\\tdisplay: block;\\n\\theight: 100%;\\n\\twidth: 50%;\\n\\tmargin-left: 50%;\\n\\tbackground-color: #FFF;\\n\\tz-index: 3;\\n}\\n\\n#revealedDeck {\\n\\tdisplay: block;\\n\\ttop: 120%;\\n}\\n\\n.revealedDeckCard {\\n\\tdisplay: inline-block;\\n\\tposition: relative;\\n\\theight: 160px;\\n}\\n\\n/* Landscape */\\n\\n@media only screen\\nand (min-device-width: 320px)\\nand (max-device-width: 812px)\\n/* and (-webkit-min-device-pixel-ratio: 2) */\\nand (orientation: landscape) {\\n  .flex-all {\\n    display: flex;\\n    flex-direction: row;\\n    justify-content: center;\\n    margin: 0 auto;\\n  }\\n\\n  .flex-container {\\n    display: flex;\\n    flex-direction: column;\\n    align-items: center;\\n    width: 100%;\\n    margin-right: 5%;\\n  }\\n\\n  #side {\\n    display: flex;\\n    flex-direction: column;\\n    align-items: center;\\n    height: 65vh;\\n    margin: 15% 2% 0 0;\\n    width: 10%;\\n    max-width: 75px;\\n    min-width: 50px;\\n  }\\n\\n  #undo {\\n    display: inline-block;\\n    position: absolute;\\n    height: 8%;\\n    max-height: 24px;\\n  }\\n\\n  #botHand, #yourHand {\\n    display: flex;\\n    justify-content: center;\\n    width: 80%;\\n    margin-right: 5%;\\n  }\\n\\n  #indicator {\\n    font-family: Arial, Helvetica, sans-serif;\\n    font-size: 2em;\\n  }\\n\\n\\n  #deck {\\n    height: 20%;\\n  }\\n\\n  #scrap {\\n    height: 20%;\\n    margin-top: 10%;\\n  }\\n\\n\\n\\n  #field {\\n    position: relative;\\n    justify-content: center;\\n    border: 2px solid black;\\n    width: 100%;\\n    min-height: 140px;\\n    max-height: 150px;\\n  }\\n\\n\\n  .field {\\n    position: relative;\\n  }\\n  .fieldArea {\\n    display: inline-block;\\n    position: relative;\\n    min-height: 90px;\\n\\n  }\\n  #yourField {\\n    min-height: 75px;\\n    height: 75px;\\n    display: flex;\\n    flex-direction: row;\\n  }\\n  #botField {\\n    min-height: 75px;\\n    height: 75px;\\n    display: flex;\\n    flex-direction: row;\\n  }\\n\\n  .yourPointCard {\\n    display: inline-block;\\n  }\\n  .pointCardImg {\\n    display: inline-block;\\n    height: 75px;\\n  }\\n\\n  .jack {\\n    height: 75px;\\n    position: relative;\\n    margin-left: -32px;\\n    margin-right: 8px;\\n  }\\n\\n  .legalMove {\\n    background-color: rgb(91, 194, 69);\\n  }\\n  .validTarget {\\n    border: 3px solid rgb(91, 194, 69);\\n  }\\n\\n  /*Scrap view overlaying field*/\\n  app-scrap-view {\\n    position: absolute;\\n    display: block;\\n    height: 100%;\\n    width: 100%;\\n    background-color: #FFF;\\n    z-index: 3;\\n  }\\n\\n  app-deck-view {\\n    position: absolute;\\n    display: block;\\n    height: 100%;\\n    width: 50%;\\n    margin-left: 50%;\\n    background-color: #FFF;\\n    z-index: 3;\\n  }\\n\\n  #revealedDeck {\\n    display: block;\\n    position: absolute;\\n    height: 100%;\\n    top: 120%;\\n  }\\n\\n  .revealedDeckCard {\\n    display: inline-block;\\n    position: relative;\\n    height: 10%;\\n  }\\n\\n  #indicator {\\n    font-size: 12px;\\n  }\\n\\n\\n  #toggle {\\n    display: none;\\n  }\\n}\\n\"","module.exports = \"<img id=\\\"undo\\\" src=\\\"assets/back-arrow.png\\\" (click)=\\\"undo()\\\">\\n\\n<div class=\\\"flex-all\\\">\\n\\t<div id=\\\"side\\\">\\n\\t\\t<img src=\\\"assets/deck.png\\\" id=\\\"deck\\\" (click)=\\\"draw()\\\">\\n\\t\\t<img src=\\\"assets/scrap.png\\\" id=\\\"scrap\\\" (click)=\\\"untargetedOneOff()\\\" [ngClass]=\\\"{'validTarget': gs.selected &&  [1, 3, 4, 5, 6, 7].indexOf(gs.selected.rank) > -1}\\\">\\n\\t</div>\\n\\n\\t<div class=\\\"flex-container\\\">\\n\\n\\t\\t<!-- <div class=\\\"flex-container flex1\\\"> -->\\n\\t\\t<app-hand id=\\\"botHand\\\" [player]=\\\"game.players[0]\\\" [ngClass]=\\\"{'legalMove': gs.selected && gs.selected.rank == 8}\\\" (click)=\\\"playGlasses()\\\"></app-hand>\\n\\t\\t<!-- </div> -->\\n\\n\\n\\t\\t<div id=\\\"field\\\">\\n\\t\\t\\t<app-scrap-view *ngIf=\\\"gs.chooseScrap\\\"></app-scrap-view>\\n\\t\\t\\t<app-deck-view *ngIf=\\\"gs.chooseDeck\\\"></app-deck-view>\\n\\t\\t\\t<div id=\\\"botField\\\" class=\\\"field\\\">\\n\\t\\t\\t\\t<div id=\\\"botPoints\\\" class=\\\"fieldArea\\\">\\n\\t\\t\\t\\t\\t<div *ngFor=\\\"let card of game.bot.points index as index\\\" class=\\\"yourPointCard\\\">\\n\\t\\t\\t\\t\\t\\t<img src=\\\"assets/cards/{{card.img}}\\\" [ngClass]=\\\"{'validTarget': gameService.validTargets.indexOf(card) > -1}\\\"\\n\\t\\t\\t\\t\\t\\t (click)=\\\"targetPoint(card, index)\\\" class=\\\"pointCardImg\\\">\\n\\t\\t\\t\\t\\t\\t<img *ngFor=\\\"let jack of card.jacks index as jackIndex\\\" src=\\\"assets/cards/{{jack.img}}\\\" class=\\\"jack\\\" [ngClass]=\\\"{'validTarget': gameService.validTargets.indexOf(jack) > -1}\\\" (click)=\\\"targetedOneOffJack(card, index)\\\">\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t<div id=\\\"botFaceCards\\\" class=\\\"fieldArea\\\">\\n\\t\\t\\t\\t\\t<img *ngFor=\\\"let card of game.bot.faceCards\\\" src=\\\"assets/cards/{{card.img}}\\\" class=\\\"pointCardImg\\\" [ngClass]=\\\"{'validTarget': gameService.validTargets.indexOf(card) > -1}\\\" (click)=\\\"targetedOneOffFaces(card, index)\\\">\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t</div>\\n\\n\\t\\t\\t<div id=\\\"yourField\\\" class=\\\"field\\\" [ngClass]=\\\"{'legalMove': gs.legalMoves.indexOf('field') > -1}\\\" (click)='playToField()'>\\n\\t\\t\\t\\t<div id=\\\"yourPoints\\\" class=\\\"fieldArea\\\">\\n\\n\\t\\t\\t\\t\\t<div *ngFor=\\\"let card of game.player.points\\\" class=\\\"yourPointCard\\\">\\n\\t\\t\\t\\t\\t\\t<img src=\\\"assets/cards/{{card.img}}\\\" class=\\\"pointCardImg\\\">\\n\\t\\t\\t\\t\\t\\t<img *ngFor=\\\"let jack of card.jacks\\\" src=\\\"assets/cards/{{jack.img}}\\\" class=\\\"jack\\\">\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t<div id=\\\"yourPointsFace\\\" class=\\\"fieldArea\\\">\\n\\t\\t\\t\\t\\t<img *ngFor=\\\"let card of game.player.faceCards\\\" src=\\\"assets/cards/{{card.faceImg}}\\\" class=\\\"pointCardImg\\\">\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t</div>\\n\\t\\t</div>\\n\\t\\t<app-hand id=\\\"yourHand\\\" [player]=\\\"game.players[1]\\\"></app-hand>\\n\\t\\t<div id=\\\"indicator\\\">Victory requirements: {{game.player.remainingPointsNeededToWin}} points</div>\\n    <div *ngIf=\\\"NODE_ENV === 'development'\\\">\\n\\t\\t  <button id=\\\"toggle\\\" (click)=\\\"showDeck = !showDeck\\\">Toggle Deck</button>\\n\\t\\t  <div *ngIf=\\\"showDeck\\\" id=\\\"revealedDeck\\\">\\n\\t\\t\\t  <img *ngFor=\\\"let card of game.deck index as index\\\" src=\\\"assets/cards/{{card.img}}\\\" class=\\\"revealedDeckCard\\\" (click)=\\\"stackDeck(index)\\\">\\n\\t\\t  </div>\\n    </div>\\n\\t</div>\\n\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { Game } from '../game';\nimport { GameService } from '../game.service';\n\n@Component({\n  selector: 'app-board',\n  templateUrl: './board.component.html',\n  styleUrls: ['./board.component.css']\n})\nexport class BoardComponent implements OnInit {\n\tshowDeck: boolean;\n\n\tget gs() {\n\t\treturn this.gameService;\n\t}\n\n\tget game() {\n\t\treturn this.gameService.game;\n\t}\n\n\tdraw() {\n\t\t// Check if you're under the hand limit\n\t\tif (this.game.player.hand.length < 8) {\n\t\t\tlet oldGame = this.game.copy();\n\t\t\tlet gameCopy = this.game.copy();\n\t\t\tgameCopy.players[1].hand.push(gameCopy.deck.shift()); // add card to hand\n\t\t\tgameCopy = this.gameService.botBrain.decideLegalMoves(gameCopy);\n\t\t\t// Add change to history and update game\n\t\t\tthis.gameService.update(oldGame, gameCopy);\n\t\t\tthis.gameService.selected = null;\n\t\t\tthis.gameService.selIndex = null;\n\t\t}\n\t}\n\n\tplayToField() {\n\t\tif (this.gameService.selected) {\n\t\t\tvar oldGame = this.game.copy();\n\t\t\tvar gameCopy = this.game.copy();\n\t\t\t// Playing card from your hand\n\t\t\tif (!this.gameService.chooseDeck) {\n\t\t\t\tif (this.gameService.selected.rank <= 10) {\n\t\t\t\t\t// Move card to points\n\t\t\t\t\tgameCopy.player.points.push(gameCopy.player.hand.splice(this.gameService.selIndex, 1)[0]);\n\t\t\t\t} else if (this.gameService.selected.rank == 12 || this.gameService.selected.rank == 13) {\n\t\t\t\t\t// Play face card\n\t\t\t\t\tgameCopy.player.faceCards.push(gameCopy.player.hand.splice(this.gameService.selIndex, 1)[0]);\n\t\t\t\t}\n\t\t\t// Playing card from deck using a 7\n\t\t\t} else {\n\t\t\t\tif (this.gameService.selected.rank <= 10) {\n\t\t\t\t\tgameCopy.player.points.push(gameCopy.deck.splice(this.gameService.selIndex, 1)[0]);\n\t\t\t\t} else if (this.gameService.selected.rank == 12 || this.gameService.selected.rank == 13) {\n\t\t\t\t\tgameCopy.player.faceCards.push(gameCopy.deck.splice(this.gameService.selIndex, 1)[0]);\n\t\t\t\t}\n\t\t\t\tthis.gameService.chooseDeck = false;\n\t\t\t\tgameCopy.scrap.push(this.game.oneOff);\n\t\t\t\tgameCopy.oneOff = null;\n\t\t\t}\n\t\t\t// Delete selection\n\t\t\tthis.gameService.selected = null;\n\t\t\tthis.gameService.selIndex = null;\n\t\t\t// Update game\n\t\t\tgameCopy = this.gameService.botBrain.decideLegalMoves(gameCopy);\n\t\t\tthis.gameService.update(oldGame, gameCopy);\n\t\t}\n\t}\n\n\ttargetPoint(card, index) {\n\t\t// Scuttle\n\t\tvar gameCopy = this.game.copy();\n\t\tlet oldGame = this.game.copy();\n\t\t// Playing card from hand\n\t\tif (!this.gameService.chooseDeck) {\n\t\t\t// Scuttling\n\t\t\tif (this.gameService.selected.rank <= 10 && this.gameService.selected.rank > card.rank || (this.gameService.selected.rank == card.rank && this.gameService.selected.suit > card.suit)) {\n\t\t\t\tgameCopy.scrap = gameCopy.scrap.concat(gameCopy.bot.points[index].jacks);\n\t\t\t\tgameCopy.bot.points[index].jacks = [];\n\t\t\t\tgameCopy.scrap.push(gameCopy.bot.points.splice(index, 1)[0]);\n\t\t\t\tgameCopy.scrap.push(gameCopy.player.hand.splice(this.gameService.selIndex, 1)[0]);\n\t\t\t// Playing Jack\n\t\t\t} else if (this.gameService.selected.rank == 11 && this.gameService.game.bot.numQueens == 0) {\n\t\t\t\tgameCopy.bot.points[index].jacks.push(gameCopy.player.hand.splice(this.gameService.selIndex, 1)[0]);\n\t\t\t\tgameCopy.player.points.push(gameCopy.bot.points.splice(index, 1)[0]);\n\t\t\t} \n\t\t// playing card from deck with 7\n\t\t} else {\n\t\t\t// Scuttling\n\t\t\tif (this.gameService.selected.rank <= 10 && this.gameService.selected.rank > card.rank || (this.gameService.selected.rank == card.rank && this.gameService.selected.suit > card.suit)) {\n\t\t\t\tgameCopy.scrap = gameCopy.scrap.concat(gameCopy.bot.points[index].jacks);\n\t\t\t\tgameCopy.bot.points[index].jacks = [];\n\t\t\t\tgameCopy.scrap.push(gameCopy.bot.points.splice(index, 1)[0]);\n\t\t\t\tgameCopy.scrap.push(gameCopy.deck.splice(this.gameService.selIndex, 1)[0]);\n\t\t\t// Playing Jack\n\t\t\t} else if (this.gameService.selected.rank == 11 && this.gameService.game.bot.numQueens == 0) {\n\t\t\t\tgameCopy.bot.points[index].jacks.push(gameCopy.deck.splice(this.gameService.selIndex, 1)[0]);\n\t\t\t\tgameCopy.player.points.push(gameCopy.bot.points.splice(index, 1)[0]);\n\t\t\t}\n\t\t\tgameCopy.scrap.push(gameCopy.oneOff);\n\t\t\tgameCopy.oneOff = null;\n\t\t\tgameCopy.selIndex = null;\n\t\t\tthis.gameService.chooseDeck = false;\n\t\t}\n\t\tgameCopy = this.gameService.botBrain.decideLegalMoves(gameCopy);\n\t\t// Update game\n\t\tthis.gameService.update(oldGame, gameCopy);\n\n\t\t// Delete selection\n\t\tthis.gameService.selected = null;\n\t\tthis.gameService.selIndex = null;\n\n\t}\n\n\ttargetedOneOffFaces(card, index) {\n\n\t\t// not including eights as face cards yet\n\t\tvar gameCopy = this.game.copy();\n\t\tlet oldGame = this.game.copy();\n\n\t\tif (this.gameService.selected && [2, 9].indexOf(this.gameService.selected.rank) > -1) {\n\t\t\tswitch (this.gameService.selected.rank) {\n\t\t\t\tcase 2:\n\t\t\t\t\tgameCopy.scrap.push( gameCopy.bot.faceCards.splice(index, 1)[0]);\n\t\t\t\t\tif (this.gameService.chooseDeck) {\n\t\t\t\t\t\tgameCopy.scrap.push(gameCopy.deck.splice(this.gameService.selIndex, 1)[0]);\n\t\t\t\t\t\tthis.gameService.chooseDeck = false;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tgameCopy.scrap.push(gameCopy.player.hand.splice(this.gameService.selIndex, 1)[0]);\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase 9:\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\t\t}\n\n\t\tgameCopy = this.gameService.botBrain.decideLegalMoves(gameCopy);\n\n\t\tthis.gameService.update(oldGame, gameCopy);\n\n\t\t\t// Delete selection\n\t\tthis.gameService.selected = null;\n\t\tthis.gameService.selIndex = null;\n\t}\n\n\ttargetedOneOffJack(card, index) {\n\n\t\tvar gameCopy = this.game.copy();\n\t\tlet oldGame = this.game.copy();\n\n\t\tif (this.gameService.selected && [2, 9].indexOf(this.gameService.selected.rank) > -1 && card.jacks.length >= 1) {\n\t\t\tswitch (this.gameService.selected.rank) {\n\t\t\t\tcase 2:\n\t\t\t\t\tgameCopy.scrap.push(gameCopy.bot.points[index].jacks.shift());\n\t\t\t\t\tgameCopy.player.points.push(gameCopy.bot.points[index]);\n\t\t\t\t\tgameCopy.bot.points.splice(index, 1);\n\t\t\t\t\tif (this.gameService.chooseDeck) {\n\t\t\t\t\t\tgameCopy.scrap.push(gameCopy.deck.splice(this.gameService.selIndex, 1)[0]);\n\t\t\t\t\t\tgameCopy.scrap.push(gameCopy.oneOff);\n\t\t\t\t\t\tgameCopy.oneOff = null;\n\t\t\t\t\t\tthis.gameService.chooseDeck = false;\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tgameCopy.scrap.push(gameCopy.player.hand.splice(this.gameService.selIndex, 1)[0]);\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase 9:\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\t\t\tgameCopy = this.gameService.botBrain.decideLegalMoves(gameCopy);\n\t\t}\n\t\tthis.gameService.update(oldGame, gameCopy);\n\n\t\t\t// Delete selection\n\t\tthis.gameService.selected = null;\n\t\tthis.gameService.selIndex = null;\n\t}\n\n\tuntargetedOneOff() {\n\t\tif (this.gameService.selected && [1, 3, 4, 5, 6, 7].indexOf(this.gameService.selected.rank) > -1) {\n\t\t\tvar gameCopy = this.game.copy();\n\t\t\tlet oldGame = this.game.copy();\n\t\t\tlet done = true;\n\t\t\tlet previouslyPlayedSeven = false;\n\t\t\tthis.gameService.chooseDeck = false;\n\t\t\tif (gameCopy.oneOff && gameCopy.oneOff.rank == 7) previouslyPlayedSeven = true;\n\t\t\tswitch (this.gameService.selected.rank) {\n\t\t\t\t// Destroy all Points and attached jacks\n\t\t\t\tcase 1:\n\t\t\t\t\tgameCopy.player.points.forEach(point => {\n\t\t\t\t\t\tconsole.log(\"scrapping: your\" + point.name + \". Removed jacks:\");\n\t\t\t\t\t\tgameCopy.scrap = gameCopy.scrap.concat(point.jacks);\n\t\t\t\t\t\tconsole.log(gameCopy.scrap);\n\t\t\t\t\t\tpoint.jacks = [];\n\t\t\t\t\t\tgameCopy.scrap.push(point);\n\t\t\t\t\t});\n\t\t\t\t\tgameCopy.player.points = [];\n\n\t\t\t\t\tgameCopy.bot.points.forEach(point => {\n\t\t\t\t\t\tconsole.log(\"scrapping bot's: \" + point.name + \". Removed jacks:\");\n\t\t\t\t\t\tgameCopy.scrap = gameCopy.scrap.concat(point.jacks);\n\t\t\t\t\t\tconsole.log(gameCopy.scrap);\n\t\t\t\t\t\tpoint.jacks = [];\n\t\t\t\t\t\tgameCopy.scrap.push(point);\n\t\t\t\t\t});\n\t\t\t\t\tgameCopy.bot.points = [];\n\t\t\t\t\tbreak;\n\t\t\t\t// Fetch one card from scrap pile\n\t\t\t\tcase 3:\n\t\t\t\t\tthis.gs.chooseScrap = true;\n\t\t\t\t\tdone = false;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 4:\n\t\t\t\t\tgameCopy.scrap.push(gameCopy.bot.hand.pop());\n\t\t\t\t\tgameCopy.scrap.push(gameCopy.bot.hand.pop());\n\t\t\t\t\tconsole.log(gameCopy.scrap);\n\t\t\t\t\tconst firstDiscard = gameCopy.scrap[gameCopy.scrap.length - 2].name;\n\t\t\t\t\tconst secondDiscard = gameCopy.scrap[gameCopy.scrap.length - 1].name;\n\t\t\t\t\talert(`Cuttle Bot discards the ${firstDiscard} and the ${secondDiscard}`);\n\n\t\t\t\t\tbreak;\n\t\t\t\tcase 5:\n\t\t\t\t\t// gameCopy.scrap.push(gameCopy.player.hand.splice(this.gameService.selIndex, 1)[0]);\n\t\t\t\t\tgameCopy.player.hand.push(gameCopy.deck.shift());\n\t\t\t\t\tif (gameCopy.player.hand.length < 8) {\n\t\t\t\t\t\tgameCopy.player.hand.push(gameCopy.deck.shift());\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase 6:\n\t\t\t\t\tgameCopy.player.faceCards.forEach(faceCard => {\n\t\t\t\t\t\tgameCopy.scrap.push(faceCard);\n\t\t\t\t\t});\n\t\t\t\t\tgameCopy.player.faceCards = [];\n\n\t\t\t\t\tgameCopy.bot.faceCards.forEach(faceCard => {\n\t\t\t\t\t\tgameCopy.scrap.push(faceCard);\n\t\t\t\t\t});\n\t\t\t\t\tgameCopy.bot.faceCards = [];\n\n\t\t\t\t\t// Remove jacks and determine which point cards must be exchanged\n\t\t\t\t\tlet indicesToMove = [];\n\t\t\t\t\tgameCopy.player.points.forEach((point, index) => {\n\t\t\t\t\t\tif (point.jacks.length % 2 != 0) {\n\t\t\t\t\t\t\tindicesToMove.push(index);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tgameCopy.scrap = gameCopy.scrap.concat(point.jacks);\n\t\t\t\t\t\tpoint.jacks = [];\n\t\t\t\t\t});\n\t\t\t\t\t// Switch any points from player to bot\n\t\t\t\t\twhile (indicesToMove.length > 0) {\n\t\t\t\t\t\tvar index = indicesToMove.pop();\n\t\t\t\t\t\tgameCopy.bot.points.push(gameCopy.player.points.splice(index, 1)[0]);\n\t\t\t\t\t}\n\n\t\t\t\t\tgameCopy.bot.points.forEach((point, index) => {\n\t\t\t\t\t\tif (point.jacks.length % 2 != 0) {\n\t\t\t\t\t\t\tindicesToMove.push(index);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tgameCopy.scrap = gameCopy.scrap.concat(point.jacks);\n\t\t\t\t\t\tpoint.jacks = [];\n\t\t\t\t\t});\n\t\t\t\t\t// Switch any points from bot to player\n\t\t\t\t\twhile (indicesToMove.length > 0) {\n\t\t\t\t\t\tvar index = indicesToMove.pop();\n\t\t\t\t\t\tgameCopy.player.points.push(gameCopy.bot.points.splice(index, 1)[0]);\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase 7:\n\t\t\t\t\tthis.gs.chooseDeck = true;\n\t\t\t\t\tdone = false;\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\t// code...\n\t\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tif (done) {\n\t\t\t\tif (!this.gameService.chooseDeck) {\n\t\t\t\t\t// Move played card from hand to scrap\n\t\t\t\t\tgameCopy.scrap.push(gameCopy.player.hand.splice(this.gameService.selIndex, 1)[0]);\n\t\t\t\t} else {\n\t\t\t\t\tgameCopy.scrap.push(gameCopy.deck.splice(this.gameService.selIndex, 1)[0]);\n\t\t\t\t\tgameCopy.oneOff = null;\n\t\t\t\t\tthis.gameService.chooseDeck = false;\n\t\t\t\t}\n\t\t\t\t// Bot move\n\t\t\t\tgameCopy = this.gameService.botBrain.decideLegalMoves(gameCopy);\n\t\t\t}\n\t\t\t// If player needs to take further action (3's and 7's), store current gamestate as temp\n\t\t\telse {\n\t\t\t\tif (!previouslyPlayedSeven) {\n\t\t\t\t\tgameCopy.oneOff = gameCopy.player.hand.splice(this.gameService.selIndex, 1)[0];\n\t\t\t\t} else {\n\t\t\t\t\tgameCopy.scrap.push(gameCopy.oneOff);\n\t\t\t\t\tgameCopy.oneOff = gameCopy.deck.splice(this.gameService.selIndex, 1)[0];\n\t\t\t\t}\n\t\t\t\tthis.gameService.gameCopy = gameCopy;\n\t\t\t\tthis.gameService.oldGameCopy = oldGame;\n\t\t\t}\n\n\t\t\t// Update game\n\t\t\tthis.gameService.update(oldGame, gameCopy);\n\n\t\t\t// Delete selection\n\t\t\tthis.gameService.selected = null;\n\t\t\tthis.gameService.selIndex = null;\n\t\t}\n\t}\n\n\tplayGlasses() {\n\t\tif (this.gameService.selected && this.gameService.selected.rank == 8) {\n\t\t\tvar gameCopy = this.game.copy();\n\t\t\tlet oldGame = this.game.copy();\n\n\t\t\tgameCopy.player.faceCards.push(gameCopy.player.hand.splice(this.gameService.selIndex, 1)[0]);\n\n\n\t\t\t// Delete selection\n\t\t\tthis.gameService.selected = null;\n\t\t\tthis.gameService.selIndex = null;\n\t\t\t// Update game\n\t\t\tgameCopy = this.gameService.botBrain.decideLegalMoves(gameCopy);\n\t\t\tthis.gameService.update(oldGame, gameCopy);\n\t\t}\n\t}\n\n\tundo() {\n\t\tthis.gameService.undo();\n\t}\n\n\tstackDeck(index) {\n\t\tthis.game.deck.unshift(this.game.deck.splice(index, 1)[0]);\n\t}\n\n\n\tconstructor(public gameService: GameService) {}\n\n\tngOnInit() {\n\t\tthis.showDeck = false;\n\t}\n\n}\n","import { Game } from './game';\nimport { Move } from './move'\nimport { cloneDeep } from 'lodash';\n// import { Game } from './game';\n\nexport class Bot {\n\t// looking one step ahead\n\tdecideLegalMoves(game: Game) {\n\t\tlet possibleMoves = [];\n\n\t\t// Draw\n\t\tif (game.bot.hand.length < 8 && game.deck.length > 0){\n\t\t\tlet game_copy = cloneDeep(game);\n\t\t\tgame_copy.bot.hand.push(game_copy.deck.shift());\n\t\t\tpossibleMoves.push(new Move(\"draw\", game_copy));\n\t\t}\n\n\t\t// Play cards to field\n\t\tgame.bot.hand.forEach((card, index) => {\n\t\t\t// Number cards\n\t\t\tif (card.rank <= 10) {\n\t\t\t\t// Playing the card as points\n\t\t\t\tvar play_points_game_copy = cloneDeep(game);\n\t\t\t\tplay_points_game_copy.bot.points.push(play_points_game_copy.bot.hand.splice(index, 1)[0]);\n\t\t\t\tpossibleMoves.push(new Move(\"points\", play_points_game_copy, card, index));\n\n\t\t\t\t// Check possible scuttles\n\t\t\t\tgame.player.points.forEach((target, targetIndex) => {\n\t\t\t\t\tif (card.rank > target.rank || (card.rank == target.rank && card.suit > target.suit)) {\n\t\t\t\t\t\tvar scuttle_copy = cloneDeep(game);\n\t\t\t\t\t\tscuttle_copy.scrap = scuttle_copy.scrap.concat(target.jacks);\n\t\t\t\t\t\tscuttle_copy.player.points[targetIndex].jacks = [];\n\t\t\t\t\t\tscuttle_copy.scrap.push(scuttle_copy.player.points.splice(targetIndex, 1)[0]); // Scrap player's point card\n\t\t\t\t\t\tscuttle_copy.scrap.push(scuttle_copy.bot.hand.splice(index, 1)[0]); // Scrap bot's scuttling card\n\t\t\t\t\t\tpossibleMoves.push(new Move(\"scuttle\", scuttle_copy, card, index , target, targetIndex));\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t} \n\t\t\t// Kings and Queens\n\t\t\telse if (card.rank == 12 || card.rank == 13) {\n\t\t\t\tvar play_face_copy = cloneDeep(game);\n\t\t\t\tplay_face_copy.bot.faceCards.push(play_face_copy.bot.hand.splice(index, 1)[0]);\n\t\t\t\tpossibleMoves.push(new Move(\"faceCard\", play_face_copy, card, index));\n\t\t\t}\n\t\t\t// Jacks\n\t\t\telse  if (card.rank == 11) {\n\t\t\t\tif (game.player.numQueens == 0) {\n\t\t\t\t\tgame.player.points.forEach((target, targetIndex) => {\n\t\t\t\t\t\tvar play_jack_copy = cloneDeep(game);\n\t\t\t\t\t\tplay_jack_copy.player.points[targetIndex].jacks.push(play_jack_copy.bot.hand.splice(index, 1)[0]);\n\t\t\t\t\t\tplay_jack_copy.bot.points.push(play_jack_copy.player.points.splice(targetIndex, 1)[0]);\n\t\t\t\t\t\tpossibleMoves.push(new Move(\"jack\", play_jack_copy, card, index, target, targetIndex));\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t\tlet gameAfterBotMove = this.chooseMove(possibleMoves, game);\n\t\treturn gameAfterBotMove;\n\t}\n\t// evaluating score of one game\n\tevaluateGame(game: Game) {\n\t\tlet score = game.bot.hand.length + game.bot.pointTotal % 10  + game.bot.pointTotal/10 + game.bot.faceCards.length\n\t\t\t- (game.player.hand.length + game.player.pointTotal % 10 + game.player.pointTotal/10 + game.player.faceCards.length);\n\t\tif (game.playerWins) {score = -100; console.log(\"PLAYER COULD WIN\");}\n\t\tif (game.botWins) score = 100;\n\t\treturn score;\n\t}\n\n\tevaluateMove(move: Move) {\n\t\tlet score = null;\n\t\tmove.results.forEach(game => {\n\t\t\tlet game_score = this.evaluateGame(game);\n\n\t\t\tif (score == null || game_score < score) {\n\t\t\t\tscore = game_score;\n\t\t\t}\n\t\t});\n\t\treturn score;\n\t}\n\n\tchooseMove(moves: Array<Move>, game: Game) {\n\t\tlet highest_score = null;\n\t\tlet high_index = null;\n\n\t\tmoves.forEach((move, index) => {\n\t\t\tlet move_score = this.evaluateMove(move);\n\n\t\t\tif (highest_score == null || highest_score < move_score) {\n\t\t\t\thighest_score = move_score;\n\t\t\t\thigh_index = index;\n\t\t\t}\n\t\t});\n\n\t\tlet best_move = moves[high_index];\n\n\n\t\t// let gameAfterBotMove = this.makeMove(best_move, game);\n\n\t\t// Alert player of bot's move\n\t\tconst moveName = best_move.name;\n\t\tlet announcement = \"\";\n\n\t\tswitch (moveName) {\n\t\t\tcase \"draw\":\n\t\t\t\tannouncement = \"Cuttle Bot Draws.\"\n\t\t\t\tbreak;\n\t\t\tcase \"points\":\n\t\t\t\tannouncement = `Cuttle Bot plays the ${best_move.card.name} for points`;\n\t\t\t\tbreak;\n\t\t\tcase \"faceCard\":\n\t\t\t\tannouncement = `Cuttle Bot plays the ${best_move.card.name}`;\n\t\t\t\tbreak;\n\t\t\tcase \"scuttle\":\n\t\t\t\tannouncement = `Cuttle Bot scuttles your ${best_move.target.name} with its ${best_move.card.name}`;\n\t\t\t\tbreak;\n\t\t\tcase \"jack\":\n\t\t\t\tannouncement = `Cuttle Bot steals your ${best_move.target.name} with its ${best_move.card.name}`;\n\t\t\t\tbreak;\n\t\t\tcase \"oneOff\": \n\t\t\t\tannouncement = `Cuttle Bot plays the ${best_move.card.name} for one-off effects`;\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\t// code...\n\t\t\t\tbreak;\n\t\t}\n\n\t\talert(announcement);\n\n\t\tlet gameAfterBotMove = best_move.game;\n\t\treturn gameAfterBotMove;\n\n\t}\n\n\tmakeMove(move: Move, game: Game) {\n\t\tswitch (move.name) {\n\t\t\tcase \"draw\":\n\t\t\t\tgame.bot.hand.push(game.deck.shift());\n\t\t\t\tbreak;\n\t\t\tcase \"points\":\n\t\t\t\tgame.bot.points.push(game.bot.hand.splice(move.index, 1)[0]);\n\t\t\t\tbreak;\n\t\t\tcase \"scuttle\":\n\t\t\t\tconsole.log(\"Bot is scuttling\");\n\t\t\t\tgame.scrap.push(game.bot.hand.splice(move.index)[0]);\n\t\t\t\tconsole.log(\"Bot's card scrapped\");\n\t\t\t\tconsole.log(game.scrap);\n\t\t\t\tgame.scrap.push(game.player.hand.splice(move.target_index)[0]);\n\t\t\t\tconsole.log(\"your card scrapped\");\n\t\t\t\tconsole.log(game.scrap);\n\t\t\t\tbreak;\n\t\t\tcase \"oneOff\":\n\t\t\t// A LOT!\n\t\t\t// How do I implement one-off here???\n\t\t\t\tbreak;\n\t\t\tcase \"faceCard\":\n\t\t\t\tgame.bot.faceCards.push(game.bot.hand.splice(move.index, 1)[0])\n\t\t\t\tbreak;\n\t\t}\n\t\treturn game;\n\t}\n\n\tsuggestMove(initialGame: Game, gameAfterPlayerMove: Game) {\n\t\tlet res = null;\n\t\t// Only consider suggesting move if player didn't win\n\t\tif (!gameAfterPlayerMove.player.isWinner) {\n\t\t\tlet betterMovePriority = 0;\n\t\t\t// Check for better defensive moves if player lost\n\t\t\tif (gameAfterPlayerMove.bot.isWinner) {\n\t\t\t\t// Assume player didn't have a better move unless we find a way to stop the bot\n\t\t\t\tres = \"Dang, you lost! Nice try. There was actually nothing you could have done better on that last turn. Try rewinding a few turns back if you want to see how the game could have gone, or just refresh the page to start over.\";\n\t\t\t\tinitialGame.player.hand.forEach(card => {\n\t\t\t\t\t// Check for potential scuttles and jack steals\n\t\t\t\t\tinitialGame.bot.points.forEach(target => {\n\t\t\t\t\t\tif ((card.rank <= 10 && card.rank > target.rank || (card.rank == target.rank && card.suit > target.suit)) && betterMovePriority == 0) {\n\t\t\t\t\t\t\tres = \"Dang, you lost! You might have been able to stop the bot if you scuttled last turn. Try rewinding and playing that turn over!\";\n\t\t\t\t\t\t\tbetterMovePriority = 1;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if (card.rank == 11 && initialGame.bot.numQueens == 0 && betterMovePriority <= 1) {\n\t\t\t\t\t\t\tres = \"Dang, you lost! You might have been able to stop the bot if you stole its points with a jack last turn. Try rewinding and playing that turn over!\";\n\t\t\t\t\t\t\tbetterMovePriority = 2;\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t}\n\n\t\t\t// Check for better offensive moves\n\t\t\tinitialGame.player.hand.forEach((card, index) => {\n\t\t\t\tif (card.rank <= 10) {\n\t\t\t\t\tif (initialGame.player.remainingPointsNeededToWin < card.rank && betterMovePriority == 0) {\n\t\t\t\t\t\tres = \"Psst! You actually could have won on that turn if you played differently. Consider rewinding and playing points\";\n\t\t\t\t\t\tbetterMovePriority = 1;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if (card.rank == 13) {\n\t\t\t\t\tif (initialGame.player.couldWinWithKing && betterMovePriority <= 1) {\n\t\t\t\t\t\tres = \"Psst! You actually could have won on that last turn if you played differently. Consider rewinding and playing a king\";\n\t\t\t\t\t\tbetterMovePriority = 2;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if (card.rank == 11 && initialGame.bot.numQueens == 0 && betterMovePriority <= 2) {\n\t\t\t\t\tinitialGame.bot.points.forEach(card => {\n\t\t\t\t\t\tif (card.rank >= initialGame.player.remainingPointsNeededToWin) {\n\t\t\t\t\t\t\tres = \"Psst! You actually could have won on that last turn if you played differently. Considering rewinding and playing a jack\";\n\t\t\t\t\t\t\tbetterMovePriority = 3;\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t});\n\n\t\t}\n\t\treturn res;\n\t} \n\n\tconstructor() {\n\n\t}\n}\n\n\n\n// switch (move.name) {\n//     case 1:\n//         break;\n//     case 3:\n//         break;\n//     case 4:\n//         break;  \n//     case 5:\n//         break;\n//     case 6:\n//     case 7:\n//         moves.push(\"field\");\n//         moves.push(\"scrap\");\n//         // Determine legal scuttles\n//         this.game.bot.points.forEach(card => {\n//             // if (card.rank < this.gameService.selected.rank || (card.rank == this.gameService.selected.rank && card.suit <= this.gameService.selected.suit) ) {\n//             // \t// Add point to list of scuttles\n//             // }\n//         });\n//         break;\n\n//     case 2:\n//     case 9:\n//         moves.push(\"field\");\n//         break;\n//     case 8:\n//         moves.push(\"field\");\n//         break;\n//     case 10:\n//         moves.push(\"field\");\n//         break;\n//     case 11:\n//         break;\n//     case 12:\n//     case 13:\n//         break;","export class Card {\n\tsuit: number;\n\trank: number;\n\tjacks: Card[];\n\n\tget img(): string {\n\t\treturn `card-${this.suit}-${this.rank}.svg`;\n\t}\n\n\tget faceImg(): string {\n\t\tif (this.rank == 8) {\n\t\t\tswitch(this.suit) {\n\t\t\t\tcase 0:\n\t\t\t\t\treturn 'glasses-clubs.svg';\n\t\t\t\tcase 1:\n\t\t\t\t\treturn 'glasses-diamonds.svg';\n\t\t\t\tcase 2:\n\t\t\t\t\treturn 'glasses-hearts.svg';\n\t\t\t\tcase 3:\n\t\t\t\t\treturn 'glasses-spades.svg';\n\t\t\t}\n\t\t} else {\n\t\t\treturn `card-${this.suit}-${this.rank}.svg`;\t\t\n\t\t}\n\t}\n\n\tget name(): string {\n\t\tswitch (this.suit) {\n\t\t\tcase 0:\n\t\t\t\treturn `${this.rank_name} of Clubs`;\n\t\t\t\t// break;\n\t\t\tcase 1:\n\t\t\t\treturn `${this.rank_name} of Diamonds`;\n\t\t\t\t// break;\n\t\t\tcase 2:\n\t\t\t\treturn `${this.rank_name} of Hearts`;\n\t\t\t\t// break;\n\t\t\tdefault:\n\t\t\t\treturn `${this.rank_name} of Spades`;\n\t\t\t\t// break;\n\t\t}\n\t}\n\n\tget rank_name(): string {\n\t\tswitch (this.rank) {\n\t\t\tcase 1:\n\t\t\t\treturn 'Ace';\n\t\t\tcase 11:\n\t\t\t\treturn 'Jack';\n\t\t\tcase 12:\n\t\t\t\treturn 'Queen';\n\t\t\tcase 13:\n\t\t\t\treturn 'King';\n\t\t\tdefault:\n\t\t\t\treturn this.rank.toString();\n\t\t}\n\t}\n\n\tconstructor(suit: number, rank: number) {\n\t\tthis.suit = suit;\n\t\tthis.rank = rank;\n\t\tthis.jacks = new Array<Card>();\n\t}\n}","module.exports = \"h1 {\\n\\ttext-align: center;\\n}\\nimg {\\n\\tdisplay: inline-block;\\n\\tposition: relative;\\n\\theight: 40%;\\n\\tmargin-top: 3%;\\n\\tmargin-left: 1%;\\n}\\n#topCard {\\n\\tmargin-left: 34%;\\n}\\n.selected {\\n\\tborder: 2px solid green;\\n}\"","module.exports = \"<h1>Choose one of the top two cards from the deck to play</h1>\\n<img src=\\\"assets/cards/{{gameService.game.deck[0].img}}\\\" id=\\\"topCard\\\" (click)=\\\"clickDeckCard(0)\\\" [ngClass]=\\\"{'selected': gameService.game.deck[0] == selected}\\\">\\n<img src=\\\"assets/cards/{{gameService.game.deck[1].img}}\\\" (click)=\\\"clickDeckCard(1)\\\" [ngClass]=\\\"{'selected': gameService.game.deck[1] == selected}\\\">\"","import { Component, OnInit } from '@angular/core';\nimport { GameService } from '../game.service';\n@Component({\n  selector: 'app-deck-view',\n  templateUrl: './deck-view.component.html',\n  styleUrls: ['./deck-view.component.css']\n})\nexport class DeckViewComponent implements OnInit {\n\n\tget selected() {\n\t\treturn this.gameService.selected;\n\t}\n\n\tclickDeckCard(index) {\n\t\tif (this.selected == this.gameService.game.deck[index]) {\n\t\t\tthis.gameService.selected = null;\n\t\t\tthis.gameService.selIndex = null;\n\t\t} else {\n\t\t\tthis.gameService.selected = this.gameService.game.deck[index];\n\t\t\tthis.gameService.selIndex = index;\n\t\t}\n\t}\n\n\tconstructor(public gameService: GameService) { }\n\n\tngOnInit() {\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Game } from './game';\nimport { Card } from './card';\nimport { Bot } from './bot';\nimport { game } from './mock_game'; \n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class GameService {\n\thistory: Array<Game>;\n\tbotBrain: Bot;\n\tselected: Card;\n\tselIndex: number;\n\tvalidTargets: Card[];\n\tgameCopy: Game;\n\toldGameCopy: Game;\n\tchooseScrap: boolean; //player is playing a 3\n\tchooseDeck: boolean; //player is playing a 7\n\n\n\tget legalMoves() {\n\t\tlet moves = [];\n\t\tthis.validTargets = [];\n\t\tif (this.selected) {\n\t\t\tswitch (this.selected.rank) {\n\t\t\t\tcase 1:\n\t\t\t\tcase 3:\n\t\t\t\tcase 4:\n\t\t\t\tcase 5:\n\t\t\t\tcase 6:\n\t\t\t\tcase 7:\n\t\t\t\t\tmoves.push(\"field\");\n\t\t\t\t\tmoves.push(\"scrap\");\n\t\t\t\t\t// Determine legal scuttles\n\t\t\t\t\tthis.game.bot.points.forEach(card => {\n\t\t\t\t\t\tif (card.rank < this.selected.rank || (card.rank == this.selected.rank && card.suit <= this.selected.suit) ) {\n\t\t\t\t\t\t\t// Add point to list of scuttles\n\t\t\t\t\t\t\tthis.validTargets.push(card);\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 2:\n\t\t\t\t\tmoves.push(\"field\");\n\t\t\t\t\tthis.game.bot.points.forEach(card => {\n\t\t\t\t\t\tif(card.jacks.length >= 1){\n\t\t\t\t\t\t\tthis.validTargets.push(card.jacks[card.jacks.length - 1]);\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\n\t\t\t\t\tthis.game.bot.faceCards.forEach(card => {\n\t\t\t\t\t\tthis.validTargets.push(card);\n\t\t\t\t\t});\n\n\t\t\t\t\tbreak;\n\t\t\t\tcase 9:\n\t\t\t\t\t// Determine legal scuttles\n\t\t\t\t\tthis.game.bot.points.forEach(card => {\n\t\t\t\t\t\tif (card.rank < this.selected.rank || (card.rank == this.selected.rank && card.suit <= this.selected.suit) ) {\n\t\t\t\t\t\t\t// Add point to list of scuttles\n\t\t\t\t\t\t\tthis.validTargets.push(card);\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t\tmoves.push(\"field\");\n\t\t\t\t\tbreak;\n\t\t\t\tcase 8:\n\t\t\t\t\t// Determine legal scuttles\n\t\t\t\t\tthis.game.bot.points.forEach(card => {\n\t\t\t\t\t\tif (card.rank < this.selected.rank || (card.rank == this.selected.rank && card.suit <= this.selected.suit) ) {\n\t\t\t\t\t\t\t// Add point to list of scuttles\n\t\t\t\t\t\t\tthis.validTargets.push(card);\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t\tmoves.push(\"field\");\n\t\t\t\t\tbreak;\n\t\t\t\tcase 10:\n\t\t\t\t\t// Determine legal scuttles\n\t\t\t\t\tthis.game.bot.points.forEach(card => {\n\t\t\t\t\t\tif (card.rank < this.selected.rank || (card.rank == this.selected.rank && card.suit <= this.selected.suit) ) {\n\t\t\t\t\t\t\t// Add point to list of scuttles\n\t\t\t\t\t\t\tthis.validTargets.push(card);\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t\tmoves.push(\"field\");\n\t\t\t\t\tbreak;\n\t\t\t\tcase 11:\n\t\t\t\t\tif (this.game.bot.numQueens < 1) {\n\t\t\t\t\t\tthis.game.bot.points.forEach(card => {\n\t\t\t\t\t\t\tthis.validTargets.push(card);\n\t\t\t\t\t\t});\n\t\t\t\t\t} \n\t\t\t\t\tbreak;\n\t\t\t\tcase 12:\n\t\t\t\tcase 13:\n\t\t\t\t\tmoves.push(\"field\");\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\treturn moves;\n\t}\n\n\t// Current game is the last in the history\n\tget game() {\n\t\treturn this.history[this.history.length - 1];\n\t}\n\n\tupdate(oldGame: Game, newGame: Game) {\n\t\tconsole.log(newGame);\n\t\tthis.history.push(newGame);\n\n\t\tif (this.game.player.isWinner) {\n\t\t\talert(\"You won! Way to go!\");\n\t\t} else {\n\t\t\tconst suggestion = this.botBrain.suggestMove(oldGame, newGame);\n\t\t\tif (suggestion) alert(suggestion);\n\t\t}\n\t\tif (this.game.bot.isWinner) {\n\t\t\t// alert(\"Aww, you lost! Nice try.\");\n\t\t}\t\t\n\t} \n\n\tundo() {\n\t\tif (this.history.length > 1) {\n\t\t\tthis.history.pop();\n\t\t} else {\n\t\t\talert(\"We are back at the beginning of the game! Try making a move\");\n\t\t}\n\t}\n\n\tconstructor() {\n\t\tthis.history = new Array<Game>();\n\t\tthis.validTargets = new Array<Card>();\n\t\tthis.history.push(game);\n\t\tthis.selIndex = null;\n\t\tthis.selected = null;\n\t\tthis.botBrain = new Bot();\n\t\tthis.chooseScrap = false;\n\t\tthis.chooseDeck = false;\n\t}\n}","import { cloneDeep } from 'lodash';\nimport { Card } from './card';\nimport { Player } from './player';\n\nexport class Game {\n\tplayers: Player[];\n\tdeck: Card[];\n\tscrap: Card[];\n\toneOff: Card;\n\t// turn: number;\n\n\t////////////\n\t// Getters//\n\t////////////\n\tget bot() {\n\t\treturn this.players[0];\n\t}\n\tget player() {\n\t\treturn this.players[1];\n\t}\n\tget botWins() {\n\t\treturn this.bot.isWinner;\n\t}\n\tget playerWins() {\n\t\treturn this.player.isWinner;\n\t}\n\n\t/////////////\n\t// Methods //\n\t/////////////\n\t// Shuffles deck\n\tshuffle() {\n\t\tfor (let i=this.deck.length - 1; i> 0; i--) {\n\t\t\tconst j = Math.floor(Math.random() * (i + 1));\n\t\t\t[this.deck[i], this.deck[j]] = [this.deck[j], this.deck[i]];\n\t\t}\n\t}\n\n\tcopy() {\n\t\treturn cloneDeep(this);\n\t}\n\t\n\tconstructor() {\n\t\tthis.deck = new Array<Card>();\n\t\tthis.scrap = new Array<Card>();\n\t\tthis.players = new Array<Player>();\n\t\tthis.players.push(new Player(true)); //Bot goes first\n\t\tthis.players.push(new Player(false)); //Human player second\n\n\t\t// Create deck\n\t\tfor (let suit=0; suit<4; suit++) {\n\t\t\tfor (let rank=1; rank<14; rank++) {\n\t\t\t\tthis.deck.push(new Card(suit, rank));\n\t\t\t}\n\t\t}\n\t\tthis.shuffle(); // Shuffle deck\n\n\t\t// Deal\n\t\tthis.bot.hand.push(this.deck.shift()); //Extra card to player\n\t\t// Player gets 5 and goes first, Bot gets 6\n\t\tfor (let i=0; i<5; i++) {\n\t\t\tthis.players[0].hand.push(this.deck.shift());\n\t\t\tthis.players[1].hand.push(this.deck.shift());\n\t\t}\n\n\t}\n}","module.exports = \"div {\\n\\tposition: relative;\\n\\tdisplay: inline-block;\\n\\t/* height: 100%; */\\n\\tmargin-left: 2%;\\n\\tmargin-top: 2%;\\n\\tmargin-bottom: 2%;\\n}\\nimg {\\n\\tposition: relative;\\n\\tdisplay: inline-block;\\n\\t/* height: 100%; */\\n\\theight: 160px;\\n}\\n.selected {\\n\\tborder: 2px solid green;\\n}\\np {\\n\\tdisplay: block;\\n\\tposition: absolute;\\n\\tz-index: 4;\\n\\tborder-radius: 5px;\\n\\twidth: 130px;\\n\\tmargin-top: -75px;\\n\\tpadding: 5px 10px;\\n\\tfont-size: 1em;\\n\\tcolor: #039be5;\\n\\tbackground-color: #CFD8DC;\\n}\\n/* Landscape */\\n@media only screen \\n  and (min-device-width: 320px) \\n  and (max-device-width: 812px)\\n  and (-webkit-min-device-pixel-ratio: 2)\\n  and (orientation: landscape) {\\n\\n\\timg {\\n\\t\\tposition: relative;\\n\\t\\tdisplay: inline-block;\\n\\t\\t/* height: 100%; */\\n\\t\\tmax-height: 75px;\\n\\t}\\n\\n\\tp {\\n\\t\\tdisplay: flex;\\n\\t\\tz-index: 4;\\n\\t\\tborder-radius: 5px;\\n\\t\\twidth: 75px;\\n\\t\\tmargin-top: -25px;\\n\\t\\tpadding: 5px 10px;\\n\\t\\tfont-size: 0.3em;\\n\\t\\tcolor: #039be5;\\n\\t\\tbackground-color: #CFD8DC;\\n\\t}\\n\\n\\t\\n}\"","module.exports = \"<div *ngFor=\\\"let card of player.hand index as i\\\">\\n\\t<img *ngIf=\\\"player.isBot && !hasGlasses\\\" src=\\\"assets/card-back.png\\\" class=\\\"card\\\">\\n\\t<img *ngIf=\\\"!player.isBot || hasGlasses\\\" src=\\\"assets/cards/{{card.img}}\\\" class=\\\"card\\\" (click)=clickCard(i) [ngClass]=\\\"{'selected': card == selected}\\\" (mouseover)=\\\"displayTooltip(i)\\\" (mouseout)=\\\"hideTooltip()\\\" (mouseleave)=\\\"hideTooltip()\\\">\\n  \\t<p *ngIf=\\\"showTooltip[i]\\\">{{tooltip}}</p>\\n</div>\"","import { Component, OnInit, Input } from '@angular/core';\nimport { Player } from '../player';\nimport { Card } from '../card';\nimport { GameService } from '../game.service';\n\n@Component({\n  selector: 'app-hand',\n  templateUrl: './hand.component.html',\n  styleUrls: ['./hand.component.css']\n})\nexport class HandComponent implements OnInit {\n\n\tshowTooltip: Array<boolean>;\n\ttooltip: string;\n\t@Input() player: Player;\n\tconstructor(public gameService: GameService) { \n\t\tthis.tooltip = '';\n\t\tthis.showTooltip = [];\n\t}\n\n\tget selected() {\n\t\treturn this.gameService.selected;\n\t}\n\tset select(card) {\n\t\tthis.gameService.selected = card;\n\t}\n\n\tget hasGlasses() {\n\t\tlet res = false;\n\t\tthis.gameService.game.player.faceCards.forEach(card => {\n\t\t\tif (card.rank == 8) res = true;\n\t\t});\n\t\treturn res;\n\t}\n\n\n\tclickCard(index) {\n\t\t// alert(index);\n\t\tif (this.player.hand[index] != this.selected) {\n\t\t\tthis.select = this.player.hand[index];\n\t\t\tthis.gameService.selIndex = index;\n\n\t\t\t\n\t\t} else {\n\t\t\tthis.select = null;\n\t\t\tthis.gameService.selIndex = null;\n\t\t}\n\t}\n\n\tdisplayTooltip(index) {\n\n\t\t\tlet tooltips = {\n\t\t\t\t\"1\": \"Destroy all Point Cards in play.\",\n\t\t\t\t\"2\": \"On Turn: Destroy any non-point card. On Opponent’s Turn: Cancels the action of a card your opponent plays; cannot be used on Point Cards.\",\n\t\t\t\t\"3\": \"Look through the Scrap Pile and pick a card to add to your hand. You must show your opponent the card.\",\n\t\t\t\t\"4\": \"Make your opponent discard two cards of their choosing. If your opponent only has one card, you can still use a 4 on them.\",\n\t\t\t\t\"5\": \"Draw two cards.\",\n\t\t\t\t\"6\": \"Destroy all Face Cards in play.\",\n\t\t\t\t\"7\": \"Reveal the top two cards of the deck and choose one to play. The other card is put back on top of the deck.\",\n\t\t\t\t\"8\": \"(Not available) Place an 8 sideways and choose one opponent. The opponent must reveal their hand to you whenever you ask. The 8 is considered a Face Card when played in this fashion.\",\n\t\t\t\t\"9\": \"Return any card in play back to the owner’s hand. The player with the returned card cannot play it for their following turn.\",\n\t\t\t\t\"10\": \"Used for points.\",\n\t\t\t\t\"11\": \"Steal a Point Card or opposing Jack in play.\",\n\t\t\t\t\"12\": \"Your other cards cannot be affected by 2’s, 9’s, or Jack’s. Queens do not protect against scuttling. Having 2 Queens means you cannot be Jokered.\",\n\t\t\t\t\"13\": \"Reduces the amount of points you need to win. 1 King = 14 Points; 2 Kings = 10 Points; 3 Kings = 7 Points; 4 Kings = 5 Points\",\n\t\t\t\t\"14\": \"\"\n\t\t\t}\n\t\t\tthis.tooltip = tooltips[this.player.hand[index].rank.toString()];\n\n\t\t\tfor (let i = 0; i < this.player.hand.length; i++) {\n\t\t\t\tthis.showTooltip[i] = i === index ?  true : false;\n\t\t\t}\n\n\t}\n\n\thideTooltip() {\n\t\tconsole.log(\"hiding tooltip\");\n\t\tthis.showTooltip = [];\n\t\tthis.tooltip = '';\n\t}\n\n\tngOnInit() {\n\t}\n\n}\n","import { Card } from './card';\nimport { Player } from './player';\nimport { Game } from './game';\n\nlet game = new Game();\n\n// console.log(game);\n\nexport { game }","import { Card } from './card';\nimport { Game } from './game';\nimport { game } from './mock_game';\nimport { cloneDeep } from 'lodash';\n\nexport class Move {\n    name: String;\n    game: Game; //Result after doing move\n    card: Card;\n    index: number;\n    target: Card;\n    target_index: number;\n    results: Array<Game>;\n\n    findResults(game: Game) {\n        let resulting_games = [];\n        if(game.player.hand.length < 8 && game.deck.length > 0){\n            let game_copy = cloneDeep(game);\n\n            game_copy.player.hand.push(game_copy.deck.shift());\n\n            resulting_games.push(game_copy);\n        }\n        // Assume player plays the ten of spades to evaluate player's offense\n        let player_plays_ten = cloneDeep(game);\n        player_plays_ten.player.points.push(new Card(3, 10));\n        player_plays_ten.player.hand.shift();\n        resulting_games.push(player_plays_ten);\n\n        return resulting_games;\n    }\n\n    constructor(name, game, card?, index?, target?, target_index?) {\n        this.name = name;\n        this.game = game;\n        this.card = card;\n        this.index = index;\n        this.target = target;\n        this.target_index = target_index;\n        this.results = this.findResults(this.game);\n    }\n}\n","import { Card } from './card';\n\nexport class Player {\n\tisBot: Boolean;\n\thand: Card[];\n\tpoints: Card[];\n\tfaceCards: Card[];\n\t\n\tget score() {\n\t\tlet res = 0;\n\t\tthis.points.forEach(card => {\n\t\t\tres += card.rank;\n\t\t});\n\t\treturn res;\n\t}\n\tget numKings() {\n\t\tlet res = 0;\n\t\tthis.faceCards.forEach(card => {\n\t\t\tif (card.rank == 13) res++;\n\t\t});\n\t\treturn res;\n\t}\n\tget numQueens() {\n\t\tlet res = 0;\n\t\tthis.faceCards.forEach(card => {\n\t\t\tif (card.rank == 12) res++;\n\t\t});\n\t\treturn res;\n\t}\n\tget pointTotal() {\n\t\tlet res = 0;\n\t\tthis.points.forEach(card => {\n\t\t\tres += card.rank;\n\t\t});\n\t\treturn res;\n\t}\n\tget remainingPointsNeededToWin() {\n\t\tlet res = 21;\n\t\tswitch (this.numKings) {\n\t\t\tcase 0:\n\t\t\t\tres = 21;\n\t\t\t\tbreak;\n\t\t\tcase 1:\n\t\t\t\tres = 14;\n\t\t\t\tbreak;\n\t\t\tcase 2:\n\t\t\t\tres = 10;\n\t\t\t\tbreak;\n\t\t\tcase 3:\n\t\t\t\tres = 7;\n\t\t\t\tbreak;\n\t\t\tcase 4:\n\t\t\t\tres = 5;\n\t\t\t\tbreak;\n\t\t}\n\t\tres -= this.pointTotal;\n\t\treturn res;\n\t}\n\tget couldWinWithKing() {\n\t\tlet res = false;\n\t\tswitch (this.numKings) {\n\t\t\tcase 0:\n\t\t\t\tif (this.pointTotal >= 14) res = true;\n\t\t\t\tbreak;\n\t\t\tcase 1:\n\t\t\t\tif (this.pointTotal >= 10) res = true;\n\t\t\t\tbreak;\n\t\t\tcase 2:\n\t\t\t\tif (this.pointTotal >= 7) res = true;\n\t\t\t\tbreak;\n\t\t\tcase 3:\n\t\t\t\tif (this.pointTotal >= 5) res = true;\n\t\t\t\tbreak;\n\t\t}\n\t\treturn res;\n\t}\n\tget isWinner() {\n\t\tlet res = false;\n\t\tlet score = this.score;\n\t\tlet numKings = this.numKings;\n\t\tswitch (numKings) {\n\t\t\tcase 0:\n\t\t\t\tif (score >= 21) res = true;\n\t\t\t\tbreak;\n\t\t\tcase 1:\n\t\t\t\tif (score >= 14) res = true;\n\t\t\t\tbreak;\n\t\t\tcase 2:\n\t\t\t\tif (score >= 10) res = true;\n\t\t\t\tbreak;\n\t\t\tcase 3:\n\t\t\t\tif (score >= 7) res = true;\n\t\t\t\tbreak;\n\t\t\tcase 4:\n\t\t\t\tif (score >= 5) res = true;\n\t\t\t\tbreak;\n\t\t}\n\t\treturn res;\n\t}\n\n\tconstructor(isBot) {\n\t\tthis.isBot = isBot;\n\t\tthis.hand = new Array<Card>();\n\t\tthis.points = new Array<Card>();\n\t\tthis.faceCards = new Array<Card>();\n\t}\n}","module.exports = \"h1 {\\n\\ttext-align: center;\\n}\\nimg {\\n\\tdisplay: inline-block;\\n\\tposition: relative;\\n\\theight: 40%;\\n\\tmargin-top: 3%;\\n\\tmargin-left: 1%;\\n}\"","module.exports = \"<h1>Choose a card from the scrap pile</h1>\\n<img *ngFor=\\\"let card of gameService.game.scrap index as index\\\" src=\\\"assets/cards/{{card.img}}\\\" (click)=\\\"chooseCard(index)\\\">\"","import { Component, OnInit } from '@angular/core';\nimport { GameService } from '../game.service';\n\n@Component({\n  selector: 'app-scrap-view',\n  templateUrl: './scrap-view.component.html',\n  styleUrls: ['./scrap-view.component.css']\n})\nexport class ScrapViewComponent implements OnInit {\n\n\tchooseCard(index) {\n\t\tlet gameCopy = this.gameService.gameCopy.copy();\n\t\tlet oldGame = this.gameService.oldGameCopy.copy();\n\t\t// Move chosen card to player's hand\n\t\tgameCopy.player.hand.push(gameCopy.scrap.splice(index, 1)[0]);\n\t\tgameCopy.scrap.push(gameCopy.oneOff);\n\t\t// Clear out temp data\n\t\tgameCopy.oneOff = null;\n\t\tthis.gameService.gameCopy = null;\n\t\tthis.gameService.oldGameCopy = null;\n\t\tthis.gameService.chooseScrap = false;\n\t\t// Make bot move\n\t\tgameCopy = this.gameService.botBrain.decideLegalMoves(gameCopy);\n\t\t// Update game\n\t\tthis.gameService.update(oldGame, gameCopy);\n\t}\n\n\n\tconstructor(public gameService: GameService) { }\n\n\tngOnInit() {\n\t}\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}